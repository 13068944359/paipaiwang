<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.paipaiwang.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.paipaiwang.po.Order" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="create_date" property="createDate" jdbcType="DATE" />
    <result column="finish_time" property="finishTime" jdbcType="TIMESTAMP" />
    <result column="send_name" property="sendName" jdbcType="VARCHAR" />
    <result column="send_phone" property="sendPhone" jdbcType="VARCHAR" />
    <result column="send_address" property="sendAddress" jdbcType="VARCHAR" />
    <result column="send_postcode" property="sendPostcode" jdbcType="VARCHAR" />
    <result column="send_others" property="sendOthers" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="evaluate" property="evaluate" jdbcType="BIT" />
    <result column="evaluation" property="evaluation" jdbcType="VARCHAR" />
    <result column="return_reason" property="returnReason" jdbcType="VARCHAR" />
    <result column="last_state_time" property="lastStateTime" jdbcType="TIMESTAMP" />
    <result column="express_company" property="expressCompany" jdbcType="VARCHAR" />
    <result column="express_id" property="expressId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, price, create_date, finish_time, send_name, send_phone, send_address, 
    send_postcode, send_others, remark, state, evaluate, evaluation, return_reason, last_state_time, 
    express_company, express_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.paipaiwang.po.Order" >
    insert into t_order (id, user_id, price, 
      create_date, finish_time, send_name, 
      send_phone, send_address, send_postcode, 
      send_others, remark, state, 
      evaluate, evaluation, return_reason, 
      last_state_time, express_company, express_id
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, 
      #{createDate,jdbcType=DATE}, #{finishTime,jdbcType=TIMESTAMP}, #{sendName,jdbcType=VARCHAR}, 
      #{sendPhone,jdbcType=VARCHAR}, #{sendAddress,jdbcType=VARCHAR}, #{sendPostcode,jdbcType=VARCHAR}, 
      #{sendOthers,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{evaluate,jdbcType=BIT}, #{evaluation,jdbcType=VARCHAR}, #{returnReason,jdbcType=VARCHAR}, 
      #{lastStateTime,jdbcType=TIMESTAMP}, #{expressCompany,jdbcType=VARCHAR}, #{expressId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.paipaiwang.po.Order" >
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="finishTime != null" >
        finish_time,
      </if>
      <if test="sendName != null" >
        send_name,
      </if>
      <if test="sendPhone != null" >
        send_phone,
      </if>
      <if test="sendAddress != null" >
        send_address,
      </if>
      <if test="sendPostcode != null" >
        send_postcode,
      </if>
      <if test="sendOthers != null" >
        send_others,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="evaluate != null" >
        evaluate,
      </if>
      <if test="evaluation != null" >
        evaluation,
      </if>
      <if test="returnReason != null" >
        return_reason,
      </if>
      <if test="lastStateTime != null" >
        last_state_time,
      </if>
      <if test="expressCompany != null" >
        express_company,
      </if>
      <if test="expressId != null" >
        express_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=DATE},
      </if>
      <if test="finishTime != null" >
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendName != null" >
        #{sendName,jdbcType=VARCHAR},
      </if>
      <if test="sendPhone != null" >
        #{sendPhone,jdbcType=VARCHAR},
      </if>
      <if test="sendAddress != null" >
        #{sendAddress,jdbcType=VARCHAR},
      </if>
      <if test="sendPostcode != null" >
        #{sendPostcode,jdbcType=VARCHAR},
      </if>
      <if test="sendOthers != null" >
        #{sendOthers,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="evaluate != null" >
        #{evaluate,jdbcType=BIT},
      </if>
      <if test="evaluation != null" >
        #{evaluation,jdbcType=VARCHAR},
      </if>
      <if test="returnReason != null" >
        #{returnReason,jdbcType=VARCHAR},
      </if>
      <if test="lastStateTime != null" >
        #{lastStateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expressCompany != null" >
        #{expressCompany,jdbcType=VARCHAR},
      </if>
      <if test="expressId != null" >
        #{expressId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.paipaiwang.po.Order" >
    update t_order
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=DATE},
      </if>
      <if test="finishTime != null" >
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendName != null" >
        send_name = #{sendName,jdbcType=VARCHAR},
      </if>
      <if test="sendPhone != null" >
        send_phone = #{sendPhone,jdbcType=VARCHAR},
      </if>
      <if test="sendAddress != null" >
        send_address = #{sendAddress,jdbcType=VARCHAR},
      </if>
      <if test="sendPostcode != null" >
        send_postcode = #{sendPostcode,jdbcType=VARCHAR},
      </if>
      <if test="sendOthers != null" >
        send_others = #{sendOthers,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="evaluate != null" >
        evaluate = #{evaluate,jdbcType=BIT},
      </if>
      <if test="evaluation != null" >
        evaluation = #{evaluation,jdbcType=VARCHAR},
      </if>
      <if test="returnReason != null" >
        return_reason = #{returnReason,jdbcType=VARCHAR},
      </if>
      <if test="lastStateTime != null" >
        last_state_time = #{lastStateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expressCompany != null" >
        express_company = #{expressCompany,jdbcType=VARCHAR},
      </if>
      <if test="expressId != null" >
        express_id = #{expressId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.paipaiwang.po.Order" >
    update t_order
    set user_id = #{userId,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      create_date = #{createDate,jdbcType=DATE},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      send_name = #{sendName,jdbcType=VARCHAR},
      send_phone = #{sendPhone,jdbcType=VARCHAR},
      send_address = #{sendAddress,jdbcType=VARCHAR},
      send_postcode = #{sendPostcode,jdbcType=VARCHAR},
      send_others = #{sendOthers,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      evaluate = #{evaluate,jdbcType=BIT},
      evaluation = #{evaluation,jdbcType=VARCHAR},
      return_reason = #{returnReason,jdbcType=VARCHAR},
      last_state_time = #{lastStateTime,jdbcType=TIMESTAMP},
      express_company = #{expressCompany,jdbcType=VARCHAR},
      express_id = #{expressId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  
   <!-- 通过关键字分页查询, 返回数据集 -->
  <select id="selectPageList" parameterType="page" resultMap="BaseResultMap" >
    select 
    
    o.id id, o.user_id user_id, o.price price, o.create_date, o.finish_time finish_time, o.send_name send_name,
    o.send_phone send_phone, o.send_address send_address, 
    o.send_postcode send_postcode, o.send_others send_others, i.name remark, 
    o.state state, o.evaluate evaluate, o.evaluation evaluation, o.return_reason return_reason,o.last_state_time last_state_time,
    o.express_company express_company,o.express_id express_id
    
    from t_order o,t_item i 
      <where>
      <if test="keyWord!=null">
      	<bind name="key" value="'%' + keyWord + '%'"/>
      	and  ( o.id like #{key} 
      	or i.name like #{key})
      </if>
      <if test="start!=null">
      	and  o.id = i.id
      </if>
	  </where>
      limit #{start},#{rows}
  </select>
  <!-- 通过关键字分页查询，返回总记录数 #{keyWord}-->
  <select id="selectPageCount" parameterType="page" resultType="Integer">
  	select count(1) from t_order o,t_item i
  	 <where>
       <if test="keyWord!=null">
      	<bind name="key" value="'%' + keyWord + '%'"/>
      	and  ( o.id like #{key} 
      	or i.name like #{key})
      </if>
      <if test="start!=null">
      	and  o.id = i.id
      </if>
	  </where>
  </select>
  
  
  
    <!-- 通过userId分页查询（userId存在keyword字段中）, 返回数据集 -->
  <select id="selectBuyOrderPageByUserId" parameterType="page" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from t_order
    where user_id = #{keyWord}
    limit #{start},#{rows}
  </select>
  <select id="selectBuyOrderCountByUserId" parameterType="page" resultType="Integer">
  	select count(1) from t_order
    where user_id = #{keyWord}
  </select>
  
  
     <!-- 通过userId分页查询（userId存在keyword字段中）, 返回数据集 -->
  <select id="selectSellOrderPageByUserId" parameterType="page" resultMap="BaseResultMap" >
    select 
    
    o.id id, o.user_id user_id, o.price price, o.create_date, o.finish_time finish_time, o.send_name send_name,
    o.send_phone send_phone, o.send_address send_address, 
    o.send_postcode send_postcode, o.send_others send_others, i.name remark, 
    o.state state, o.evaluate evaluate, o.evaluation evaluation, o.return_reason return_reason,o.last_state_time last_state_time,
    o.express_company express_company,o.express_id express_id
    
    from t_order o,t_item i 
      where	 o.id = i.id
      and i.owner = ${keyWord}
      limit #{start},#{rows}
  </select>
  <select id="selectSellOrderCountByUserId" parameterType="page" resultType="Integer">
  	select count(1) from t_order o,t_item i
  	 where	 o.id = i.id
      and i.owner = ${keyWord}
  </select>
</mapper>